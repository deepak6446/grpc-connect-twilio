package handlers

import (
	"context"
	"errors"
	"log"
	"net/http"

	authv1 "auth-service/gen/auth/v1"           // generated by protoc-gen-go
	otpv1 "auth-service/gen/external/v1"        // generated by protoc-gen-go
	"auth-service/gen/external/v1/otpv1connect" // generated by protoc-gen-go

	// Import the Connect-go code (for client interface)
	"auth-service/database"

	"connectrpc.com/connect"
)

func (s *AuthServer) SignupWithPhoneNumber(
	ctx context.Context,
	req *connect.Request[authv1.SignupRequest],
) (*connect.Response[authv1.SignupResponse], error) {

	// Check if phone number is provided
	if req.Msg.PhoneNumber == "" {
		return nil, errors.New("phone number is mandatory")
	}

	_, otp := getOtp(req.Msg.PhoneNumber)

	// Save signup data along with OTP
	err := database.SaveSignupData(req.Msg, otp)
	if err != nil {
		return nil, err
	}

	res := connect.NewResponse(&authv1.SignupResponse{
		Success: true,
		Message: "signup success",
	})
	res.Header().Set("Auth-Version", "v1")
	return res, nil
}

func getOtp(phoneNumber string) (error, string) {
	client := otpv1connect.NewOtpServiceClient(
		http.DefaultClient,
		"http://localhost:8081",
	)
	res, err := client.VerifyPhoneNumber(
		context.Background(),
		connect.NewRequest(&otpv1.VerifyPhoneNumberRequest{PhoneNumber: phoneNumber}),
	)
	if err != nil {
		log.Println(err)
		return err, ""
	}

	return nil, res.Msg.Otp
}
