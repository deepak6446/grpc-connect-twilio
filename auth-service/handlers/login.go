package handlers

import (
	"context"
	"errors"
	"fmt"

	Authv1 "auth-service/gen/auth/v1" // generated by protoc-gen-go

	"auth-service/database" // Import the database module

	"connectrpc.com/connect"
)

// ValidatePhoneNumberLogin performs user login using phone number and OTP
func (s *AuthServer) ValidatePhoneNumberLogin(
	ctx context.Context,
	req *connect.Request[Authv1.LoginRequest],
) (*connect.Response[Authv1.LoginResponse], error) {
	// Extract phone number and OTP from the request
	phoneNumber := req.Msg.PhoneNumber
	otp := req.Msg.Otp

	// Validate OTP
	valid, err := database.ValidateOTP(phoneNumber, otp)
	if err != nil {
		fmt.Println("Error validating OTP: ", err)
		return nil, err
	}
	if !valid {
		return nil, errors.New("invalid credentials")
	}

	// Generate access token
	accessToken := generateAccessToken()

	// Log successful login
	fmt.Println("User logged in: Phone number: ", phoneNumber)

	// Return response with access token
	res := connect.NewResponse(&Authv1.LoginResponse{
		AccessToken: accessToken,
		Success:     true,
	})
	return res, nil
}

// generateAccessToken generates an access token
func generateAccessToken() string {
	// You can use a more sophisticated method for generating access tokens
	// Not in scope for this example
	return "test_access_token"
}
